function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);

var style_rtl = {"kc_slider":"_949D7","kc_slider_container":"_3h-Rg","box":"_25o3f","boxNoEffects":"_2fe--","page_small_view_container":"_13jOy","page_small_view":"_3PjHV","page_small_view_selected":"_7ixzj","kc_pager_left":"_Z1_JJ","kc_pager_right":"_2uTsQ","icon":"_vA4o9","chevronright":"_1ViZt","chevronleft":"_2mSx_","loading":"_3ipxO","kc_pager":"_1tnZR","big":"_1Sb2C","small":"_1fhya","touch":"_3dudh"};

var style_lrt = {"kc_slider":"_3FtQE","kc_slider_container":"_wJxOC","box":"_DU58q","boxNoEffects":"_2OSHI","page_small_view_container":"_1yosG","page_small_view":"_1BNll","page_small_view_selected":"_3mO9G","kc_pager_right":"_2bcUa","kc_pager_left":"_35o37","icon":"_sBeYm","chevronright":"_1I4W3","chevronleft":"_D4plk","loading":"_2mwXM","kc_pager":"_1x90e","big":"_3iZTT","small":"_1NcDb","touch":"_1JSfW"};

var Item = function Item(props) {
  var style = props.rtl ? style_rtl : style_lrt;
  var box = style.box;
  var Size = style[props.size || 'small'];

  if (props.noEffects) {
    box = style.boxNoEffects;
  }

  return React__default.Children.map(props.children, function (child, index) {
    return React__default.cloneElement(child, {
      key: index,
      className: child.props.className ? child.props.className + ' ' + box + ' ' + Size : box + ' ' + Size
    });
  });
};

var SliderInner = function SliderInner(props) {
  var style = props.rtl ? style_rtl : style_lrt;

  var _useState = React.useState(0),
      pages = _useState[0],
      setPages = _useState[1];

  var _useState2 = React.useState(1),
      currentPage = _useState2[0],
      setCurrentPage = _useState2[1];

  var _useState3 = React.useState(0),
      currentPagePer = _useState3[0],
      setCurrentPagePer = _useState3[1];

  var _useState4 = React.useState(false),
      isOn = _useState4[0],
      setIsOn = _useState4[1];

  var supportsTouch = 'ontouchstart' in window || navigator.msMaxTouchPoints;
  var touch = supportsTouch && style.touch;
  var visible_items = 0;
  var slider = React.useRef(null);
  var left = React.useRef(null);
  var right = React.useRef(null);

  if (props.noEffects == true) {
    if (window.innerWidth < 600) visible_items = 4;else if (window.innerWidth < 700) visible_items = 5;else if (window.innerWidth < 800) visible_items = 6;else if (window.innerWidth < 1000) visible_items = 7;else if (window.innerWidth > 1000) visible_items = 8;
  } else {
    if (window.innerWidth < 1000) visible_items = 6;else if (window.innerWidth > 1000) visible_items = 5;
  }

  React.useEffect(function () {
    if (props.children) setPages(Math.round((props.children.length || 1) / visible_items + 1));
    return function () {
      setCurrentPage(1);
      setCurrentPagePer(0);
    };
  }, [props]);
  var dir = {
    right: style.kc_pager_right,
    left: style.kc_pager_left,
    right_photo: /*#__PURE__*/React__default.createElement("span", {
      className: style.chevronright
    }),
    left_photo: /*#__PURE__*/React__default.createElement("span", {
      className: style.chevronleft
    })
  };

  if (props.rtl) {
    dir = {
      right: style.kc_pager_left,
      left: style.kc_pager_right,
      right_photo: /*#__PURE__*/React__default.createElement("span", {
        className: style.chevronright
      }),
      left_photo: /*#__PURE__*/React__default.createElement("span", {
        className: style.chevronleft
      })
    };
  }

  if (!props.children) {
    return /*#__PURE__*/React__default.createElement("div", null);
  }

  return /*#__PURE__*/React__default.createElement("div", {
    onLoad: function onLoad(e) {
      right.current.style.display = 'none';
      left.current.style.display = 'none';
    },
    onMouseEnter: function onMouseEnter(e) {
      if (window.innerWidth < 600 || touch) {
        return;
      }

      if (currentPage >= pages) {
        right.current.style.display = 'none';
      } else {
        right.current.style.display = 'block';
      }

      if (currentPage <= 1) {
        left.current.style.display = 'none';
      } else {
        left.current.style.display = 'block';
      }

      left.current.style.opacity = '1';
      right.current.style.opacity = '1';
      setIsOn(true);
    },
    onMouseLeave: function onMouseLeave(e) {
      if (window.innerWidth < 600 || touch) {
        return;
      }

      left.current.style.opacity = '0';
      right.current.style.opacity = '0';
      setIsOn(false);
    },
    onMouseOver: function onMouseOver(e) {
      if (isOn) {
        return;
      }

      if (window.innerWidth < 600 || touch) {
        return;
      }

      if (currentPage >= pages) {
        right.current.style.display = 'none';
      } else {
        right.current.style.display = 'block';
      }

      if (currentPage <= 1) {
        left.current.style.display = 'none';
      } else {
        left.current.style.display = 'block';
      }

      left.current.style.opacity = '1';
      right.current.style.opacity = '1';
      setIsOn(true);
    },
    className: style.kc_slider_container + ' ' + touch
  }, /*#__PURE__*/React__default.createElement("div", {
    ref: slider,
    className: style.kc_slider
  }, props.children.map(function (e, i) {
    return /*#__PURE__*/React__default.createElement(Item, {
      noEffects: props.noEffects,
      rtl: props.rtl,
      size: props.size,
      key: 'items_' + i,
      len: visible_items
    }, e);
  })), /*#__PURE__*/React__default.createElement("div", {
    className: style.page_small_view_container
  }, function () {
    var ps = [];

    for (var i = 0; i < pages; i++) {
      ps.push(i + 1);
    }

    return ps.map(function (_, i) {
      if (i == currentPage - 1) return /*#__PURE__*/React__default.createElement("div", {
        key: 'pages_views_' + i,
        className: style.page_small_view_selected
      });
      return /*#__PURE__*/React__default.createElement("div", {
        key: 'pages_views_' + i,
        className: style.page_small_view
      });
    });
  }()), /*#__PURE__*/React__default.createElement("div", {
    ref: right,
    className: dir.right,
    onClick: function onClick(e) {
      if (props.rtl) {
        setCurrentPage(currentPage + 1);
        setCurrentPagePer(currentPagePer + 100);
        slider.current.style.transform = "translateX(" + (currentPagePer + 100) + "%)";
      } else {
        setCurrentPage(currentPage + 1);
        setCurrentPagePer(currentPagePer - 100);
        slider.current.style.transform = "translateX(" + (currentPagePer - 100) + "%)";
      }

      if (currentPage + 1 >= pages) {
        right.current.style.display = 'none';
      } else {
        right.current.style.display = 'block';
      }

      if (currentPage + 1 <= 1) {
        left.current.style.display = 'none';
      } else {
        left.current.style.display = 'block';
      }
    }
  }, /*#__PURE__*/React__default.createElement("div", {
    className: style.icon
  }, dir.right_photo)), /*#__PURE__*/React__default.createElement("div", {
    ref: left,
    className: dir.left,
    onClick: function onClick(e) {
      if (props.rtl) {
        setCurrentPage(currentPage - 1);
        setCurrentPagePer(currentPagePer - 100);
        slider.current.style.transform = "translateX(" + (currentPagePer - 100) + "%)";
      } else {
        setCurrentPage(currentPage - 1);
        setCurrentPagePer(currentPagePer + 100);
        slider.current.style.transform = "translateX(" + (currentPagePer + 100) + "%)";
      }

      if (currentPage - 1 <= 1) {
        left.current.style.display = 'none';
      } else {
        left.current.style.display = 'block';
      }

      if (currentPage - 1 >= pages) {
        right.current.style.display = 'none';
      } else {
        right.current.style.display = 'block';
      }
    }
  }, /*#__PURE__*/React__default.createElement("div", {
    className: style.icon
  }, dir.left_photo)));
};

var Slider = function Slider(props) {
  return /*#__PURE__*/React__default.createElement(SliderInner, {
    rtl: props.rtl,
    noEffects: props.noEffects,
    size: props.size
  }, props.children);
};

exports.Slider = Slider;
//# sourceMappingURL=index.js.map
